
/////                                                  \\\\\
///// IDS/2DA changes                                  \\\\\
/////                                                  \\\\\

// expanded IDS entries; included as libraries so other modders can nab them
INCLUDE ~%MOD_FOLDER%/lib/bg2fixpack/ids_entries_animate.tph~
INCLUDE ~%MOD_FOLDER%/lib/bg2fixpack/ids_entries_anisnd.tph~
INCLUDE ~%MOD_FOLDER%/lib/bg2fixpack/ids_entries_gtimes.tph~
INCLUDE ~%MOD_FOLDER%/lib/bg2fixpack/ids_entries_shoutids.tph~
// INCLUDE ~%MOD_FOLDER%/lib/bg2fixpack/ids_entries_specific.tph~ // no one was happy with these entries
INCLUDE ~%MOD_FOLDER%/lib/bg2fixpack/ids_entries_spell.tph~

COPY_EXISTING ~damages.ids~ ~override~
  REPLACE_TEXTUALLY ~^0x0001 \(.+\)$~ 
~IDS V1.0
0x0001 \1~
  UNLESS ~^IDS V1\.0~

COPY_EXISTING ~happy.ids~ ~override~
  REPLACE_TEXTUALLY ~^-300 \(.+\)$~
~IDS V1.0
-300 \1~
  UNLESS ~^IDS V1\.0~

ACTION_IF NOT FILE_EXISTS_IN_GAME ~moraleai.ids~ BEGIN
  COPY ~bg2fixpack/ids/moraleai.ids~ ~override~
END

COPY_EXISTING ~slots.ids~    ~override~
              ~soundoff.ids~ ~override~
  REPLACE_TEXTUALLY ~^0 \(.+\)$~ 
~IDS V1.0
0 \1~
  UNLESS ~^IDS V1\.0~

COPY_EXISTING ~state.ids~ ~override~
  REPLACE_TEXTUALLY ~^0x00000000 \(.+\)$~
~IDS V1.0
0x00000000 \1~
  UNLESS ~^IDS V1\.0~

// adds custom IsValidForPartyDialogue state
APPEND ~STATE.IDS~
  ~0x80101FEF CD_STATE_NOTVALID~
  UNLESS ~CD_STATE_NOTVALID~

// Due to there being a limit to the size of songlist.2da it has become common
// practice to replace the 0th entry with a blank song and then run a wav instead. mus file below.
COPY_EXISTING ~songlist.2da~ ~override/songlist.2da~
  SET_2DA_ENTRY 2 1 2 ~G3Blank~
  SET_2DA_ENTRY 2 2 2 ~G3Blank.mus~

// if trap is undetectable, undisarmable, and has no script, remove trapped flag
COPY_EXISTING ~ar0311.are~ ~override~
  READ_LONG  0x70 "cont_off"
  READ_SHORT 0x74 "cont_num"
  FOR (index = 0 ; index < cont_num ; index = index + 1) BEGIN
    READ_SHORT ("%cont_off%" + 0x2c + ("%index%" * 0xc0)) "trap_detect"
    READ_SHORT ("%cont_off%" + 0x2e + ("%index%" * 0xc0)) "trap_remove"
    READ_SHORT ("%cont_off%" + 0x30 + ("%index%" * 0xc0)) "trapped"
    READ_ASCII ("%cont_off%" + 0x48 + ("%index%" * 0xc0)) "script"
    PATCH_IF ((("%script%" STRING_COMPARE_CASE "" = 0) OR ("%script%" STRING_COMPARE_CASE "None" = 0)) AND
              ("%trapped%" = 1) AND ("%trap_detect%" > 99) AND ("%trap_remove%" > 99)) BEGIN
      WRITE_SHORT ("%cont_off%" + 0x2c + ("%index%" * 0xc0)) 0
      WRITE_SHORT ("%cont_off%" + 0x2e + ("%index%" * 0xc0)) 0
      WRITE_SHORT ("%cont_off%" + 0x30 + ("%index%" * 0xc0)) 0
      WRITE_ASCII ("%cont_off%" + 0x48 + ("%index%" * 0xc0)) ~~ #8
    END
  END
BUT_ONLY
  
// removing spurious trap flags
COPY_EXISTING ~ar0327.are~ ~override~
              ~ar0417.are~ ~override~
              ~ar0510.are~ ~override~
  READ_LONG  0x70 "cont_off"
  READ_SHORT 0x74 "cont_num"
  FOR (index = 0 ; index < cont_num ; index = index + 1) BEGIN
    READ_ASCII ("%cont_off%" +        ("%index%" * 0xc0)) "name"
    PATCH_IF (
               (("%SOURCE_RES%" STRING_COMPARE_CASE "ar0327" = 0) AND ("%name%" STRING_COMPARE_CASE "Container 7" = 0)) OR
               (("%SOURCE_RES%" STRING_COMPARE_CASE "ar0417" = 0) AND ("%name%" STRING_COMPARE_CASE "Shelf 1" = 0)) OR
               (("%SOURCE_RES%" STRING_COMPARE_CASE "ar0417" = 0) AND ("%name%" STRING_COMPARE_CASE "Table 1" = 0)) OR
               (("%SOURCE_RES%" STRING_COMPARE_CASE "ar0510" = 0) AND ("%name%" STRING_COMPARE_CASE "Container 4" = 0))
             ) BEGIN
      WRITE_SHORT ("%cont_off%" + 0x2c + ("%index%" * 0xc0)) 0
      WRITE_SHORT ("%cont_off%" + 0x2e + ("%index%" * 0xc0)) 0
      WRITE_SHORT ("%cont_off%" + 0x30 + ("%index%" * 0xc0)) 0
      WRITE_ASCII ("%cont_off%" + 0x48 + ("%index%" * 0xc0)) ~~ #8
    END
  END
BUT_ONLY

// cleans up DLTCEP error messages
COPY_EXISTING ~BALSHLD.SPL~  ~override~
              ~BALTH03.SPL~  ~override~
              ~BALTH05.SPL~  ~override~
              ~BHAAL3A.SPL~  ~override~
              ~BHAAL4A.SPL~  ~override~
              ~CH3DRAIN.SPL~ ~override~
              ~DRGRBRHT.SPL~ ~override~
              ~JWFALL.SPL~   ~override~
              ~JWONEHIT.SPL~ ~override~
              ~JWSP02.SPL~   ~override~
              ~LICHTEL.SPL~  ~override~
              ~SAREVEFF.SPL~ ~override~
              ~SENSPISU.SPL~ ~override~
              ~spcl121.spl~  ~override~
              ~spcl133.spl~  ~override~
              ~spcl144.spl~  ~override~
              ~spcl235.spl~  ~override~
              ~spcl351.spl~  ~override~
              ~spcl423.spl~  ~override~
              ~spcl521.spl~  ~override~
              ~spcl522.spl~  ~override~
              ~spcl542.spl~  ~override~
              ~spcl613.spl~  ~override~
              ~spcl641.spl~  ~override~
              ~spcl731.spl~  ~override~
              ~spcl751.spl~  ~override~
              ~spcl751a.spl~ ~override~
              ~spcl811.spl~  ~override~
              ~spcl814.spl~  ~override~
              ~spcl820.spl~  ~override~
              ~spcl900.spl~  ~override~
              ~spcl901.spl~  ~override~
              ~spcl902.spl~  ~override~
              ~spcl903.spl~  ~override~
              ~spcl904.spl~  ~override~
              ~spcl905.spl~  ~override~
              ~spcl906.spl~  ~override~
              ~spcl907.spl~  ~override~
              ~spcl909.spl~  ~override~
              ~spcl910.spl~  ~override~
              ~spcl915.spl~  ~override~
              ~spcl916.spl~  ~override~
              ~spcl918.spl~  ~override~
              ~spcl919.spl~  ~override~
              ~spcl920.spl~  ~override~
              ~spcl921.spl~  ~override~
              ~spcl928.spl~  ~override~
              ~spcl929.spl~  ~override~
              ~spcl930.spl~  ~override~
              ~spdr101.spl~  ~override~
              ~spin104a.spl~ ~override~
              ~spin122.spl~  ~override~
              ~spin123.spl~  ~override~
              ~spin124.spl~  ~override~
              ~spin150.spl~  ~override~
              ~spin151.spl~  ~override~
              ~spin530.spl~  ~override~
              ~spin531.spl~  ~override~
              ~spin532.spl~  ~override~
              ~spin534.spl~  ~override~
              ~spin540.spl~  ~override~
              ~spin553.spl~  ~override~
              ~spin554.spl~  ~override~
              ~spin555.spl~  ~override~
              ~spin556.spl~  ~override~
              ~spin557.spl~  ~override~
              ~spin571.spl~  ~override~
              ~spin576.spl~  ~override~
              ~spin581.spl~  ~override~
              ~spin582.spl~  ~override~
              ~spin583.spl~  ~override~
              ~spin584.spl~  ~override~
              ~spin585.spl~  ~override~
              ~spin586.spl~  ~override~
              ~spin587.spl~  ~override~
              ~spin588.spl~  ~override~
              ~spin589.spl~  ~override~
              ~spin590.spl~  ~override~
              ~spin591.spl~  ~override~
              ~spin594.spl~  ~override~
              ~spin595.spl~  ~override~
              ~spin596.spl~  ~override~
              ~spin611.spl~  ~override~
              ~spin612.spl~  ~override~
              ~spin613.spl~  ~override~
              ~spin615.spl~  ~override~
              ~spin616.spl~  ~override~
              ~spin641.spl~  ~override~
              ~spin644.spl~  ~override~
              ~spin647.spl~  ~override~
              ~spin648.spl~  ~override~
              ~spin661.spl~  ~override~
              ~spin662.spl~  ~override~
              ~spin663.spl~  ~override~
              ~spin670.spl~  ~override~
              ~spin672.spl~  ~override~
              ~spin681.spl~  ~override~
              ~spin682.spl~  ~override~
              ~spin691.spl~  ~override~
              ~spin693.spl~  ~override~
              ~spin706.spl~  ~override~
              ~spin708.spl~  ~override~
              ~spin718.spl~  ~override~
              ~spin720.spl~  ~override~
              ~spin721.spl~  ~override~
              ~spin726.spl~  ~override~
              ~spin727.spl~  ~override~
              ~spin732.spl~  ~override~
              ~spin747.spl~  ~override~
              ~spin748.spl~  ~override~
              ~spin749.spl~  ~override~
              ~spin750.spl~  ~override~
              ~spin751.spl~  ~override~
              ~spin752.spl~  ~override~
              ~spin753.spl~  ~override~
              ~spin754.spl~  ~override~
              ~spin755.spl~  ~override~
              ~spin756.spl~  ~override~
              ~spin759.spl~  ~override~
              ~spin760.spl~  ~override~
              ~spin761.spl~  ~override~
              ~spin762.spl~  ~override~
              ~spin763.spl~  ~override~
              ~spin764.spl~  ~override~
              ~spin765.spl~  ~override~
              ~spin766.spl~  ~override~
              ~spin767.spl~  ~override~
              ~spin770.spl~  ~override~
              ~spin771.spl~  ~override~
              ~spin773.spl~  ~override~
              ~spin782.spl~  ~override~
              ~spin784.spl~  ~override~
              ~spin789.spl~  ~override~
              ~spin810.spl~  ~override~
              ~spin820.spl~  ~override~
              ~spin823.spl~  ~override~
              ~spin825.spl~  ~override~
              ~spin829.spl~  ~override~
              ~spin832.spl~  ~override~
              ~spin833.spl~  ~override~
              ~spin834.spl~  ~override~
              ~spin836.spl~  ~override~
              ~spin837.spl~  ~override~
              ~spin838.spl~  ~override~
              ~spin846.spl~  ~override~
              ~spin848.spl~  ~override~
              ~spin853.spl~  ~override~
              ~spin868.spl~  ~override~
              ~spin869.spl~  ~override~
              ~spin874.spl~  ~override~
              ~spin875.spl~  ~override~
              ~spin876.spl~  ~override~
              ~spin878.spl~  ~override~
              ~spin879.spl~  ~override~
              ~spin881.spl~  ~override~
              ~spin891.spl~  ~override~
              ~spin893.spl~  ~override~
              ~spin916.spl~  ~override~
              ~spin927.spl~  ~override~
              ~spin934.spl~  ~override~
              ~spin935.spl~  ~override~
              ~spin936.spl~  ~override~
              ~spin957.spl~  ~override~
              ~spin959.spl~  ~override~
              ~spin965.spl~  ~override~
              ~spin973.spl~  ~override~
              ~spin995.spl~  ~override~
              ~spinhum.spl~  ~override~
              ~sppr202.spl~  ~override~
              ~sppr203.spl~  ~override~
              ~sppr206.spl~  ~override~
              ~sppr313.spl~  ~override~
              ~sppr412.spl~  ~override~
              ~sppr515d.spl~ ~override~
              ~sppr599.spl~  ~override~
              ~sppr712.spl~  ~override~
              ~sppr713.spl~  ~override~
              ~sppr719.spl~  ~override~
              ~sppr731.spl~  ~override~
              ~sppr732.spl~  ~override~
              ~spwi108.spl~  ~override~
              ~spwi118.spl~  ~override~
              ~spwi124.spl~  ~override~
              ~spwi210.spl~  ~override~
              ~spwi211.spl~  ~override~
              ~spwi299.spl~  ~override~
              ~spwi303.spl~  ~override~
              ~spwi314a.spl~ ~override~
              ~spwi319.spl~  ~override~
              ~spwi320.spl~  ~override~
              ~spwi325.spl~  ~override~
              ~spwi411.spl~  ~override~
              ~spwi489.spl~  ~override~
              ~spwi490.spl~  ~override~
              ~spwi491.spl~  ~override~
              ~spwi517.spl~  ~override~
              ~spwi518.spl~  ~override~
              ~spwi607.spl~  ~override~
              ~spwi703.spl~  ~override~
              ~spwi712.spl~  ~override~
              ~spwi714.spl~  ~override~
              ~spwi804.spl~  ~override~
              ~spwi817.spl~  ~override~
              ~spwi818.spl~  ~override~
              ~spwi888.spl~  ~override~
              ~spwi897.spl~  ~override~
              ~spwi913.spl~  ~override~
              ~spwi915.spl~  ~override~
              ~spwi918.spl~  ~override~
              ~spwi921.spl~  ~override~
              ~spwi922.spl~  ~override~
              ~spwi924.spl~  ~override~
              ~spwi925.spl~  ~override~
              ~spwi941.spl~  ~override~
              ~spwi942.spl~  ~override~
              ~spwi944.spl~  ~override~
              ~spwi945.spl~  ~override~
              ~spwi946.spl~  ~override~
              ~spwi947.spl~  ~override~
              ~spwi949.spl~  ~override~
              ~spwi951.spl~  ~override~
              ~spwi961.spl~  ~override~
              ~spwi962.spl~  ~override~
              ~spwi963.spl~  ~override~
              ~spwi964.spl~  ~override~
              ~spwi965.spl~  ~override~
              ~spwi983.spl~  ~override~
              ~spwi987.spl~  ~override~
              ~spwi988.spl~  ~override~
              ~spwi990.spl~  ~override~
              ~spwi991.spl~  ~override~
              ~spwi992.spl~  ~override~
              ~spwi993.spl~  ~override~
              ~spwish11.spl~ ~override~
              ~spwish12.spl~ ~override~
              ~spwish13.spl~ ~override~
              ~spwish14.spl~ ~override~
              ~spwish16.spl~ ~override~
              ~spwish17.spl~ ~override~
              ~spwish46.spl~ ~override~
              ~spwm101d.spl~ ~override~
              ~spwm108.spl~  ~override~
              ~spwm109.spl~  ~override~
              ~spwm117.spl~  ~override~
              ~spwm159.spl~  ~override~
              ~spwm162.spl~  ~override~
              ~spwm188.spl~  ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    READ_LONG  0x64 "abil_off"
    READ_SHORT 0x68 "abil_num"
    READ_LONG  0x6a "fx_off"
    READ_SHORT 0x70 "fx_num"
    PATCH_IF ("%abil_num%" > 0) BEGIN
      READ_SHORT ("%abil_off%" + 0x1e + (0x28 * ("%abil_num%" - 1))) "abil_fx_num"
      READ_SHORT ("%abil_off%" + 0x20 + (0x28 * ("%abil_num%" - 1))) "abil_fx_idx"
      SET "fx_num" = ("%abil_fx_idx%" + "%abil_fx_num%")
    END
    WHILE ("%fx_num%" > 0) BEGIN
      SET "fx_num" = ("%fx_num%" - 1)
      READ_BYTE ("%fx_off%" + 0x0c + (0x30 * "%fx_num%")) "timing"
      PATCH_IF (("%timing%" = 1) OR ("%timing%" = 9)) BEGIN
        WRITE_LONG ("%fx_off%" + 0x0e + (0x30 * "%fx_num%")) 0 // duration
      END
    END
  END
BUT_ONLY

// detectable spells goes here--once it's done

//blank music file
COPY ~bg2fixpack/mus/G3Blank.mus~ ~music/G3Blank.mus~
  
// strips extraneous default(0) abiity headers from items to prevent nishruu eating
COPY_EXISTING ~amul18.itm~   ~override~
              ~amul27.itm~   ~override~
              ~belt04.itm~   ~override~
              ~belt05.itm~   ~override~
              ~belt07.itm~   ~override~
              ~belt08.itm~   ~override~
              ~belt10.itm~   ~override~
              ~bow19a.itm~   ~override~
              ~bow19b.itm~   ~override~
              ~brac01.itm~   ~override~
              ~brac02.itm~   ~override~
              ~brac03.itm~   ~override~
              ~brac08.itm~   ~override~
              ~brac11.itm~   ~override~
              ~brac13.itm~   ~override~
              ~brac14.itm~   ~override~
              ~brac18.itm~   ~override~
              ~btest1.itm~   ~override~
              ~chan01.itm~   ~override~
              ~chan02.itm~   ~override~
              ~chan03.itm~   ~override~
              ~chan06.itm~   ~override~
              ~chan07.itm~   ~override~
              ~chan08.itm~   ~override~
              ~chan12.itm~   ~override~
              ~chan13.itm~   ~override~
              ~clck01.itm~   ~override~
              ~clck03.itm~   ~override~
              ~clck05.itm~   ~override~
              ~clck10.itm~   ~override~
              ~clck11.itm~   ~override~
              ~clck12.itm~   ~override~
              ~clck13.itm~   ~override~
              ~clck14.itm~   ~override~
              ~clck15.itm~   ~override~
              ~clck16.itm~   ~override~
              ~clck17.itm~   ~override~
              ~clck18.itm~   ~override~
              ~clck19.itm~   ~override~
              ~clck22.itm~   ~override~
              ~clck23.itm~   ~override~
              ~clolth.itm~   ~override~
              ~demilich.itm~ ~override~
              ~dwchan01.itm~ ~override~
              ~finmel01.itm~ ~override~
              ~globblu3.itm~ ~override~
              ~globgre1.itm~ ~override~
              ~globpur3.itm~ ~override~
              ~globred4.itm~ ~override~
              ~halb09a.itm~  ~override~
              ~halb09b.itm~  ~override~
              ~hgwra02.itm~  ~override~
              ~jwsuper.itm~  ~override~
              ~key24.itm~    ~override~
              ~key27.itm~    ~override~
              ~key28.itm~    ~override~
              ~leat04.itm~   ~override~
              ~leat15.itm~   ~override~
              ~leat16.itm~   ~override~
              ~lich.itm~     ~override~
              ~mdk2ring.itm~ ~override~
              ~misc4y.itm~   ~override~
              ~misc5f.itm~   ~override~
              ~misc8u.itm~   ~override~
              ~misc97.itm~   ~override~
              ~misc9h.itm~   ~override~
              ~misca2.itm~   ~override~
              ~misca3.itm~   ~override~
              ~misca4.itm~   ~override~
              ~misca7.itm~   ~override~
              ~misca9.itm~   ~override~
              ~miscac.itm~   ~override~
              ~miscae.itm~   ~override~
              ~miscaf.itm~   ~override~
              ~miscag.itm~   ~override~
              ~miscah.itm~   ~override~
              ~miscaj.itm~   ~override~
              ~miscak.itm~   ~override~
              ~miscal.itm~   ~override~
              ~miscao.itm~   ~override~
              ~miscap.itm~   ~override~
              ~miscaq.itm~   ~override~
              ~miscar.itm~   ~override~
              ~miscas.itm~   ~override~
              ~miscat.itm~   ~override~
              ~miscb1.itm~   ~override~
              ~miscb2.itm~   ~override~
              ~miscb4.itm~   ~override~
              ~miscb5.itm~   ~override~
              ~miscb6.itm~   ~override~
              ~miscb7.itm~   ~override~
              ~miscb8.itm~   ~override~
              ~miscb9.itm~   ~override~
              ~miscba.itm~   ~override~
              ~miscbr.itm~   ~override~
              ~miscbs.itm~   ~override~
              ~npclck.itm~   ~override~
              ~plot02a.itm~  ~override~
              ~plot02b.itm~  ~override~
              ~plot02c.itm~  ~override~
              ~plot02d.itm~  ~override~
              ~plot02e.itm~  ~override~
              ~plot03a.itm~  ~override~
              ~plot03b.itm~  ~override~
              ~plot03c.itm~  ~override~
              ~plot03d.itm~  ~override~
              ~plot04i.itm~  ~override~
              ~plot05a.itm~  ~override~
              ~plot05b.itm~  ~override~
              ~plot05c.itm~  ~override~
              ~plot05d.itm~  ~override~
              ~potn44.itm~   ~override~
              ~ption2k.itm~  ~override~
              ~ption2l.itm~  ~override~
              ~ption2m.itm~  ~override~
              ~ption2n.itm~  ~override~
              ~ption41.itm~  ~override~
              ~ravag02.itm~  ~override~
              ~ravag03.itm~  ~override~
              ~ring02.itm~   ~override~
              ~ring04.itm~   ~override~
              ~ring21.itm~   ~override~
              ~ring23.itm~   ~override~
              ~ring25.itm~   ~override~
              ~ring37.itm~   ~override~
              ~ring38.itm~   ~override~
              ~rossring.itm~ ~override~
              ~sarbone.itm~  ~override~
              ~sarskel.itm~  ~override~
              ~sarskul.itm~  ~override~
              ~scaleb.itm~   ~override~
              ~scaler.itm~   ~override~
              ~scrla9.itm~   ~override~
              ~scrlaa.itm~   ~override~
              ~scrlac.itm~   ~override~
              ~scrlad.itm~   ~override~
              ~scrlae.itm~   ~override~
              ~sw1h54a.itm~  ~override~
              ~sw1h54b.itm~  ~override~
              ~sw2h15a.itm~  ~override~
              ~tbag01.itm~   ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // protects against invalid files
    READ_LONG   0x64 "abil_off"
    READ_SHORT  0x68 "abil_num"
    READ_LONG   0x6a "fx_off"
    READ_SHORT  0x70 "fx_num"
    SET "fx_delta" = 0
    FOR (index = 0 ; index < abil_num ; index = index + 1) BEGIN // looks for default ability header
      READ_BYTE   ("%abil_off%" +        ("%index%" * 0x38)) "type"
      PATCH_IF ("%type%" = 0) BEGIN // default ability check
        READ_SHORT  (0x1e + "%abil_off%" + ("%index%" * 0x38)) "abil_fx_num"
        READ_SHORT  (0x20 + "%abil_off%" + ("%index%" * 0x38)) "abil_fx_idx"
        DELETE_BYTES ("%fx_off%" + (0x30 * ("%abil_fx_idx%" - "%fx_delta%"))) (0x30 * "%abil_fx_num%") // deletes all associated effects
        DELETE_BYTES ("%abil_off%" + ("%index%" * 0x38)) 0x38                                          // deletes ability itself
        SET "fx_delta" = ("%fx_delta%" + "%abil_fx_num%")
        SET "abil_num" = ("%abil_num%" - 1)
        SET "index" = ("%index%" - 1)
        SET "fx_off" = ("%fx_off%" - 0x38)
      END ELSE BEGIN // if non-melee ability, need to adjust effect indices
        READ_SHORT  (0x20 + "%abil_off%" + ("%index%" * 0x38)) "abil_fx_idx"
        WRITE_SHORT (0x20 + "%abil_off%" + ("%index%" * 0x38)) ("%abil_fx_idx%" - "%fx_delta%")
      END
    END
    WRITE_SHORT  0x68 "%abil_num%"
    WRITE_LONG   0x6a "%fx_off%"
  END
BUT_ONLY
